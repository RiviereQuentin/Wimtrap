% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Wimtrap.R
\name{predictTFBS}
\alias{predictTFBS}
\title{Predicts transcription factor binding sites}
\usage{
predictTFBS(TFBSmodel, TFBSdata, studiedTFs, show_annotations = FALSE)
}
\arguments{
\item{TFBSmodel}{A xgb.Booster object as output by the function \code{\link[=buildTFBSmodel]{buildTFBSmodel()}} or any predictive model
that can be used by the function \code{\link[stats:predict]{stats::predict()}}.}

\item{TFBSdata}{A named character vector as output by the \code{\link[=getTFBSdata]{getTFBSdata()}} function, defining the local paths
to files encoding for the results of pattern-matching and geonmic feature extraction for the training TFs and/or
studied TFs.}

\item{studiedTFs}{A character vector setting the names of the studied transcription factors (for which the
location of the binding sites has to be predicted). This names have to match with one of the names of the
\code{TFBSdata} argument.}

\item{show_annotations}{Logical. Default = FALSE. If TRUE, the annotation of the potential binding sites
with the genomic features extracted from their genomic regions will be output.}
}
\value{
A named list of data.table objects corresponding to the predictions for each studied transcription factor.
The list is named according the the name of the transcription factors. The data.table objects describe, for the potential
binding sites, the location, the closest gene (relatively to the transcript start site) and the prediction score.
Higher the prediction score, higher the chance of the potential binding site to be a binding site of the studied
condition in the studied condition. Consider as minimal threshold, the score of 0.5 and level it up for increasing
the specificity. Optionally, the data.table might include the genomic features.
}
\description{
Predicts the binding sites of studied transcription factors in a studied condition
by applying a predictive model on potential binding sites
located by a prior pattern-matching analysis and annotated with genomic features extracted at their location.
}
\details{
Remark: the features included in the datasets encoded in the files given by \code{TFBSdata} have to correspond
to those integrated by the predictive model set by \code{TFBSdata}.
}
\examples{
genomic_data.ex <- c(CE = system.file("extdata/conserved_elements_example.bed", package = "Wimtrap"),
                      DGF = system.file("extdata/DGF_example.bed", package = "Wimtrap"),
                      DHS = system.file("extdata/DHS_example.bed", package = "Wimtrap"),
                      X5UTR = system.file("extdata/x5utr_example.bed", package = "Wimtrap"),
                      CDS = system.file("extdata/cds_example.bed", package = "Wimtrap"),
                      Intron = system.file("extdata/intron_example.bed", package = "Wimtrap"),
                      X3UTR = system.file("extdata/x3utr_example.bed", package = "Wimtrap")
                     )
imported_genomic_data.ex <- importGenomicData(biomart = FALSE,
                                              genomic_data = genomic_data.ex,
                                              tss = system.file("extdata/tss_example.bed", package = "Wimtrap"),
                                              tts = system.file("extdata/tts_example.bed", package = "Wimtrap"))
TFBSdata.ex <- getTFBSdata(pfm = system.file("extdata/pfm_example.pfm", package = "Wimtrap"),
                           TFnames = c("PIF3", "TOC1"),
                           organism = NULL,
                           genome_sequence = system.file("extdata/genome_example.fa", package = "Wimtrap"),
                           imported_genomic_data = imported_genomic_data.ex)
TFBSmodel.ex <- buildTFBSmodel(TFBSdata = TFBSdata.ex,
                               ChIPpeaks = c(PIF3 = system.file("extdata/PIF3_example.bed", package = "Wimtrap"),
                                             TOC1 = system.file("extdata/TOC1_example.bed", package = "Wimtrap")),
                               TF4Validation = "PIF3")
                               TF4Validation = "PIF3")
PIF3BS.predictions <- predictTFBS(TFBSmodel.ex,
                                  TFBSdata.ex,
                                  studiedTFs = "PIF3")
##To get the transcripts whose expression is potentially regulated by PIF3 using as prediction score
##threshold of 0.5 to predict the binding sites in the studied condition, do as follows:
PIF3_regulated.predictions <- as.character(PIF3BS.predictions$PIF3$gene[!duplicated(PIF3BS.predictions$PIF3$prediction.score >= 0.5)])
###If you want to consider only the gene model,
###then do as followq:
PIF3_regulated.predictions <- unlist(strsplit(PIF3_regulated.predictions, "[.]"))[seq(1, 2*length(PIF3_regulated.predictions),2)]
PIF3_regulated.predictions <- PIF3_regulated.predictions[!duplicated(PIF3_regulated.predictions)]
}
\seealso{
\code{\link[=importGenomicData]{importGenomicData()}} for importing genomic data and \code{\link[=buildTFBSmodel]{buildTFBSmodel()}} to train a predictive model of
transcription factor binding sites.
}
